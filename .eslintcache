[{"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/index.tsx":"1","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/reportWebVitals.ts":"2","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/App.tsx":"3","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/pages/meeting/index.tsx":"4","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/pages/meeting/Entry.tsx":"5","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/pages/meeting/Room.tsx":"6","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/@types/index.ts":"7","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/index.tsx":"8","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/AppContext/index.tsx":"9","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/hooks/index.ts":"10","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/hooks/messagingConnection.ts":"11","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/configs/index.ts":"12","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/index.tsx":"13","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/timerHook.ts":"14","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/@types/index.ts":"15","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/Components/index.tsx":"16","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/timerMessaging.tsx":"17"},{"size":500,"mtime":1607765795062,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1607765795063,"results":"20","hashOfConfig":"19"},{"size":1173,"mtime":1608451793899,"results":"21","hashOfConfig":"19"},{"size":1945,"mtime":1608399311524,"results":"22","hashOfConfig":"19"},{"size":1593,"mtime":1608399311523,"results":"23","hashOfConfig":"19"},{"size":8220,"mtime":1608456678390,"results":"24","hashOfConfig":"19"},{"size":525,"mtime":1608399311514,"results":"25","hashOfConfig":"19"},{"size":673,"mtime":1608399311522,"results":"26","hashOfConfig":"19"},{"size":805,"mtime":1608399311518,"results":"27","hashOfConfig":"19"},{"size":37,"mtime":1608399311521,"results":"28","hashOfConfig":"19"},{"size":1016,"mtime":1608399311522,"results":"29","hashOfConfig":"19"},{"size":183,"mtime":1608456986695,"results":"30","hashOfConfig":"19"},{"size":2706,"mtime":1608458705390,"results":"31","hashOfConfig":"19"},{"size":1328,"mtime":1608455382160,"results":"32","hashOfConfig":"19"},{"size":332,"mtime":1608457788525,"results":"33","hashOfConfig":"19"},{"size":893,"mtime":1608455209527,"results":"34","hashOfConfig":"19"},{"size":1538,"mtime":1608458614366,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"50jep0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/index.tsx",[],["72","73"],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/reportWebVitals.ts",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/App.tsx",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/pages/meeting/index.tsx",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/pages/meeting/Entry.tsx",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/pages/meeting/Room.tsx",["74","75","76","77"],"import { FC, MutableRefObject, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { MeetingModel, Member, MemberType } from '../../@types';\nimport  { Socket } from 'socket.io-client';\nimport { useMessaging } from 'features/MessagingContext';\nimport { Meeting } from '.';\nimport { InterviewTimer } from 'features/Timer';\n\nconst PeerConnection = window.RTCPeerConnection ||\n(window as any).mozRTCPeerConnection ||\nwindow.webkitRTCPeerConnection ||\n(window as any).msRTCPeerConnection;\n\nnavigator.getUserMedia = navigator.getUserMedia ||\n    (navigator as any).webkitGetUserMedia ||\n    (navigator as any).mozGetUserMedia ||\n    (navigator as any).msGetUserMedia;\n\nexport const Container = styled.div<{isPeerConnected?: boolean}>`\n    background-color: #181818;\n    color: white;\n    width:100%;\n    height: 100%;\n    max-height:100%;\n    display:flex;\n    flex-direction:column;\n`;\n\nexport const PeerVideoContainer = styled.div<{isPeerConnected?: boolean}>`\n\n    display:flex;\n    flex-direction:column;\n    flex:1;\n    width:100%;\n    height: 1px;\n\n\n    #video-audience{\n        max-height: 100%;\n        height: 100%;\n        width: 100%;\n    }\n`;\n\nconst HeaderSection = styled.div`\n\n    display: flex;\n    padding: 12px 8px;\n\n    .my-vid-container {\n\n        width:250px;\n        height: 100px;\n        max-width: 200px;\n        max-height: 150px;\n        border-radius: 15px;\n        overflow: hidden;\n\n        #video-user {\n            width:100%;\n            height:100%;\n            object-fit: cover;\n        }\n    }\n\n    .info-and-controls {\n        display: flex;\n        flex-direction: column;\n        flex:1;\n\n        .timer-module {\n            background: #ffffff1a;\n            border-radius: 40px;\n            padding: 4px 8px;\n            margin-top:12px;\n            max-width: 150px;\n            overflow:hidden;\n        }\n    }\n`;\n\ntype Props = {\n    me: Member;\n    meeting: MeetingModel;\n}\ntype MembersByRole = Partial<{[k in MemberType]: Member}>\n\nexport const Room: FC<Props> = ({meeting, me})=> {\n    \n    const peerSocketId = useMemo(()=>{\n        if(!me?.socketId || !meeting?.members) return;\n        return Object.keys(meeting.members).find(socketId => socketId !== me.socketId)\n    },[me, meeting]);\n\n    const {userVideoRef, audienceVideoRef, createOffer, isPeerConnected} = useRTC(peerSocketId);\n    const members = useMemo<MembersByRole>(()=>{\n        return Object.keys(meeting?.members || {}).reduce((m, key)=>{\n            const member = meeting?.members?.[key];\n            return {...m, [member.type]: member};\n        }, {})\n    },[meeting]);\n\n    const myType = me.type;\n    const audianceSocketId = members?.interviewee?.socketId;\n    useEffect(()=>{\n        if( myType !== MemberType.Interviewer) return;\n        if(audianceSocketId) {\n            setTimeout(()=>createOffer(audianceSocketId), 2000);\n        }\n    }, [audianceSocketId, myType, createOffer])\n\n    return (\n        <Container>\n            <HeaderViewer members={members} me={me} userVideoRef={userVideoRef}/>\n            <PeerVideoContainer className=\"videos-container\" isPeerConnected={isPeerConnected}>\n\n                <video id=\"video-audience\" className={`${isPeerConnected? 'pc':''}`} autoPlay ref={audienceVideoRef}/>\n\n            </PeerVideoContainer>\n        </Container>\n    )\n}\n\nconst HeaderViewer : FC<{members: MembersByRole, me: Member, userVideoRef: React.RefObject<HTMLVideoElement>}> = ({members, me, userVideoRef})=>{\n\n    \n    const peerMember = useMemo(()=>{\n        const peerRole = Object.keys(members).find(key => me.socketId !== members?.[key as keyof MembersByRole]?.socketId)\n        return members?.[peerRole as keyof MembersByRole];\n    }, [me, members]);\n\n    return (\n    <HeaderSection>\n        <div className=\"info-and-controls\">\n            {peerMember ?\n                <span>{peerMember?.name} <span>Online</span></span>\n                :\n                <span>Peer is not online yet</span>\n            }\n\n            { peerMember &&\n                <InterviewTimer me={me} peer={peerMember!} className=\"timer-module\"/>\n            }\n        </div>\n\n        <div className=\"my-vid-container\">\n            <video \n                muted id=\"video-user\" \n                autoPlay \n                ref={userVideoRef}/>\n        </div>\n    </HeaderSection>)\n}\n\nconst useRTC = (peerSocketId?: string)=> {\n\n    const userVideoRef = useRef<HTMLVideoElement>(null);\n    const audienceVideoRef = useRef<HTMLVideoElement>(null);\n    const peerConRef = useRef<RTCPeerConnection>();\n    const peerSocketIdRef = useRef<string>();\n    const [isPeerConnected, setIsPeerConnected] = useState<boolean>(false);\n\n    peerSocketIdRef.current = peerSocketId;\n\n    const {socketRef} = useMessaging();\n\n    const createOffer = useCallback(async(audianceSocketId: string)=>{\n        try{\n            const pc = peerConRef.current!;\n            const offer = await pc.createOffer();\n            await pc.setLocalDescription(offer);\n\n            socketRef!.current?.emit('RTCPC', {\n                desc: offer,\n                to: audianceSocketId\n            })\n        }\n        catch(err){\n            console.log(err);\n        }\n    }, [socketRef]);\n\n    useEffect(()=>{\n\n        const socket = socketRef!.current!;\n        const pc = new PeerConnection({\n            iceServers:[ \n                {urls: [\"stun:stun.services.mozilla.com\", \"stun:numb.viagenie.ca\"]},\n                {\n                    urls: [\"turn:51.75.233.33\"],\n                    username:\"1608519387\",\n                    credential:\"UOCOi+EYw6yrV0ze31Ox2M45ySA=\"\n                },\n             ]\n        });\n        peerConRef.current = pc;\n        pc.onicecandidate = async ({candidate})=>{\n\n            if(!peerSocketIdRef.current) return;\n\n            socket.emit('RTCPC', {\n                candidate,\n                to: peerSocketIdRef.current\n            });\n        }\n\n        pc.ontrack = (event)=>{\n            const remoteVid = audienceVideoRef.current!;\n            if(remoteVid?.srcObject != null) return;\n            remoteVid.srcObject = event.streams[0];\n        }\n\n        pc.onconnectionstatechange = (e:any)=>{\n            const connectionState = e?.currentTarget?.connectionState;\n\n            if(connectionState === \"connected\") setIsPeerConnected(true);\n            if([\"disconnected\", \"failed\"].includes(connectionState)) { \n                audienceVideoRef.current!.srcObject = null;\n                setIsPeerConnected(false);\n            }\n        }\n\n        const mediaConfig = {video:true, audio:true};\n\n        if(typeof navigator?.mediaDevices?.getUserMedia === 'undefined'){\n            navigator.getUserMedia(mediaConfig, (stream)=>{\n                \n                if(userVideoRef.current){\n                    userVideoRef.current.srcObject = stream;\n                    stream.getTracks().forEach((track) => peerConRef.current!.addTrack(track, stream));\n                }\n            }, (error)=>{});\n        }\n        else {\n            navigator.mediaDevices.getUserMedia(mediaConfig)\n            .then((stream)=>{\n                if(userVideoRef.current){\n                    userVideoRef.current.srcObject = stream;\n                    stream.getTracks().forEach((track) => peerConRef.current!.addTrack(track, stream));\n                }\n            })\n        }\n        \n        \n\n        socket.on('RTCPC', async function ({from, desc, candidate}:any) {\n            const pc = peerConRef.current!;\n\n            if(desc?.type === 'offer') {\n\n                await pc.setRemoteDescription(desc);\n                const answer = await pc.createAnswer();\n                await pc.setLocalDescription(answer);\n                \n                socket.emit('RTCPC', {\n                    desc: answer,\n                    to: from\n                });\n\n            }\n            else if(desc?.type === 'answer') {\n                await pc.setRemoteDescription(desc);\n            }\n            else if(candidate) {\n                await pc.addIceCandidate(candidate)\n            }\n        });\n        \n    }, []);\n\n    \n    return {\n        userVideoRef,\n        audienceVideoRef,\n        createOffer,\n        isPeerConnected\n    }\n}","/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/@types/index.ts",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/index.tsx",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/AppContext/index.tsx",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/hooks/index.ts",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/hooks/messagingConnection.ts",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/MessagingContext/configs/index.ts",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/index.tsx",["78"],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/timerHook.ts",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/@types/index.ts",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/Components/index.tsx",[],"/Users/afshinhoseini/Desktop/Interviewer/interviewer-front/src/features/Timer/timerMessaging.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":14,"nodeType":"85","messageId":"86","endLine":1,"endColumn":30},{"ruleId":"83","severity":1,"message":"87","line":4,"column":11,"nodeType":"85","messageId":"86","endLine":4,"endColumn":17},{"ruleId":"83","severity":1,"message":"88","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":269,"column":8,"nodeType":"91","endLine":269,"endColumn":10,"suggestions":"92"},{"ruleId":"83","severity":1,"message":"93","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"@typescript-eslint/no-unused-vars","'MutableRefObject' is defined but never used.","Identifier","unusedVar","'Socket' is defined but never used.","'Meeting' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socketRef'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'useTimer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [socketRef]",{"range":"99","text":"100"},[8096,8098],"[socketRef]"]